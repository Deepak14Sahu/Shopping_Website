{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { loginUser, registerUser } from \"./apiProvider\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nexport const get_token = () => {\n  if (localStorage.getItem(\"authtoken\")) {\n    return JSON.parse(localStorage.getItem(\"authtoken\"));\n  }\n  return null;\n};\nconst AccountSlice = createSlice({\n  name: 'account',\n  initialState: {\n    user: get_token() ? jwtDecode(get_token().access).name : null,\n    status: 'idle',\n    error: null,\n    is_created: null,\n    is_authenticated: get_token()\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.is_authenticated = null;\n      localStorage.removeItem(\"authtoken\");\n      toast.info(\"Logged Out Successfully!!\");\n    },\n    reset(state) {\n      state.user = null;\n      state.is_loading = false;\n      state.is_error = null;\n      state.is_created = null;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(loginUser.pending, state => {\n      state.status = 'loading';\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.status = \"success\";\n      state.user = jwtDecode(action.payload.access).name;\n      state.is_authenticated = action.payload;\n      localStorage.setItem(\"authtoken\", JSON.stringify(action.payload));\n      toast.success(`Welcome ${state.user.toUpperCase()}`);\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = 'rejected';\n      state.is_error = action.payload;\n    }).addCase(registerUser.pending, state => {\n      state.status = 'loading';\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.status = 'success';\n      state.user = null;\n      state.is_created = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.status = 'rejected';\n      state.is_error = action.payload;\n    });\n  }\n});\nexport default AccountSlice.reducer;\nexport const {\n  logout,\n  reset\n} = AccountSlice.actions;","map":{"version":3,"names":["createSlice","loginUser","registerUser","jwtDecode","toast","get_token","localStorage","getItem","JSON","parse","AccountSlice","name","initialState","user","access","status","error","is_created","is_authenticated","reducers","logout","state","removeItem","info","reset","is_loading","is_error","extraReducers","builder","addCase","pending","fulfilled","action","payload","setItem","stringify","success","toUpperCase","rejected","reducer","actions"],"sources":["/home/developer/Desktop/Full_Stack/Shopping_Website/frontend/src/features/AccountSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport { loginUser, registerUser } from \"./apiProvider\"\nimport { jwtDecode } from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\n\n\nexport const get_token = () => {\n    if (localStorage.getItem(\"authtoken\")) {\n        return JSON.parse(localStorage.getItem(\"authtoken\"))\n    }\n    return null\n}\n\nconst AccountSlice = createSlice({\n    name: 'account',\n    initialState: {\n        user: (get_token()) ? jwtDecode(get_token().access).name : null,\n        status: 'idle',\n        error: null,\n        is_created: null,\n        is_authenticated: get_token()\n    },\n    reducers: {\n        logout(state) {\n            state.user = null\n            state.is_authenticated = null\n            localStorage.removeItem(\"authtoken\")\n            toast.info(\"Logged Out Successfully!!\")\n\n        },\n        reset(state) {\n            state.user = null\n            state.is_loading = false\n            state.is_error = null\n            state.is_created = null\n\n        }\n    },\n    extraReducers(builder) {\n        builder\n            .addCase(loginUser.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                state.status = \"success\"\n                state.user = jwtDecode(action.payload.access).name\n                state.is_authenticated = action.payload\n                localStorage.setItem(\"authtoken\", JSON.stringify(action.payload))\n                toast.success(`Welcome ${state.user.toUpperCase()}`)\n            })\n            .addCase(loginUser.rejected, (state, action) => {\n                state.status = 'rejected'\n                state.is_error = action.payload\n\n            })\n            .addCase(registerUser.pending, (state) => {\n                state.status = 'loading'\n\n            })\n            .addCase(registerUser.fulfilled, (state, action) => {\n                state.status = 'success'\n                state.user = null\n                state.is_created = action.payload\n            })\n            .addCase(registerUser.rejected, (state, action) => {\n                state.status = 'rejected'\n                state.is_error = action.payload\n            })\n    },\n})\n\nexport default AccountSlice.reducer\nexport const { logout, reset } = AccountSlice.actions"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}