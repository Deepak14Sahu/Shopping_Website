{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { removeCartProduct, getCartProducts, addCartProduct } from \"./apiProvider\";\nimport { toast } from \"react-toastify\";\nconst CartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cart: [],\n    status: 'idle',\n    error: false\n  },\n  extraReducers(builder) {\n    builder.addCase(getCartProducts.pending, state => {\n      state.status = 'loading';\n    }).addCase(getCartProducts.fulfilled, (state, action) => {\n      state.status = 'success';\n      state.cart = [...action.payload.products];\n    }).addCase(getCartProducts.rejected, (state, action) => {\n      state.status = 'rejected';\n      state.error = action.payload;\n      if (action.payload.status) {\n        state.cart = [...action.payload.cart];\n      } else toast.error(action.payload);\n    }).addCase(removeCartProduct.pending, state => {\n      state.status = 'loading';\n    }).addCase(removeCartProduct.fulfilled, (state, action) => {\n      state.status = 'success';\n      state.cart = [...action.payload.products];\n    }).addCase(removeCartProduct.rejected, (state, action) => {\n      state.status = 'rejected';\n      state.error = action.payload;\n      toast.error(action.payload);\n    }).addCase(addCartProduct.pending, state => {\n      state.status = 'loading';\n    }).addCase(addCartProduct.fulfilled, (state, action) => {\n      state.status = 'success';\n      state.cart = [...action.payload.products];\n    }).addCase(addCartProduct.rejected, (state, action) => {\n      state.status = 'rejected';\n      state.error = action.payload;\n      toast.error(action.payload);\n    });\n  }\n});\nexport default CartSlice.reducer;","map":{"version":3,"names":["createSlice","removeCartProduct","getCartProducts","addCartProduct","toast","CartSlice","name","initialState","cart","status","error","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","products","rejected","reducer"],"sources":["/home/developer/Desktop/Full_Stack/Shopping_Website/frontend/src/features/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { removeCartProduct, getCartProducts, addCartProduct } from \"./apiProvider\";\nimport { toast } from \"react-toastify\";\n\nconst CartSlice = createSlice({\n    name: \"cart\",\n    initialState: {\n        cart: [],\n        status: 'idle',\n        error: false\n    },\n    extraReducers(builder) {\n        builder\n            .addCase(getCartProducts.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(getCartProducts.fulfilled, (state, action) => {\n                state.status = 'success'\n                state.cart = [...action.payload.products]\n            })\n            .addCase(getCartProducts.rejected, (state, action) => {\n                state.status = 'rejected'\n                state.error = action.payload\n                if (action.payload.status) {\n                    state.cart = [...action.payload.cart]\n                } else toast.error(action.payload)\n            })\n            .addCase(removeCartProduct.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(removeCartProduct.fulfilled, (state, action) => {\n                state.status = 'success'\n                state.cart = [...action.payload.products]\n            })\n            .addCase(removeCartProduct.rejected, (state, action) => {\n                state.status = 'rejected'\n                state.error = action.payload\n                toast.error(action.payload)\n            })\n            .addCase(addCartProduct.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(addCartProduct.fulfilled, (state, action) => {\n                state.status = 'success'\n                state.cart = [...action.payload.products]\n            })\n            .addCase(addCartProduct.rejected, (state, action) => {\n                state.status = 'rejected'\n                state.error = action.payload\n                toast.error(action.payload)\n            })\n    }\n})\n\n\nexport default CartSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,iBAAiB,EAAEC,eAAe,EAAEC,cAAc,QAAQ,eAAe;AAClF,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,aAAaA,CAACC,OAAO,EAAE;IACnBA,OAAO,CACFC,OAAO,CAACX,eAAe,CAACY,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACX,eAAe,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACN,MAAM,GAAG,SAAS;MACxBM,KAAK,CAACP,IAAI,GAAG,CAAC,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IAC7C,CAAC,CAAC,CACDN,OAAO,CAACX,eAAe,CAACkB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACN,MAAM,GAAG,UAAU;MACzBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5B,IAAID,MAAM,CAACC,OAAO,CAACT,MAAM,EAAE;QACvBM,KAAK,CAACP,IAAI,GAAG,CAAC,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI,CAAC;MACzC,CAAC,MAAMJ,KAAK,CAACM,KAAK,CAACO,MAAM,CAACC,OAAO,CAAC;IACtC,CAAC,CAAC,CACDL,OAAO,CAACZ,iBAAiB,CAACa,OAAO,EAAGC,KAAK,IAAK;MAC3CA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACZ,iBAAiB,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACN,MAAM,GAAG,SAAS;MACxBM,KAAK,CAACP,IAAI,GAAG,CAAC,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IAC7C,CAAC,CAAC,CACDN,OAAO,CAACZ,iBAAiB,CAACmB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACN,MAAM,GAAG,UAAU;MACzBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5Bd,KAAK,CAACM,KAAK,CAACO,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACV,cAAc,CAACW,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACV,cAAc,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACN,MAAM,GAAG,SAAS;MACxBM,KAAK,CAACP,IAAI,GAAG,CAAC,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IAC7C,CAAC,CAAC,CACDN,OAAO,CAACV,cAAc,CAACiB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACN,MAAM,GAAG,UAAU;MACzBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5Bd,KAAK,CAACM,KAAK,CAACO,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAGF,eAAeb,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}