{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const loginUser = createAsyncThunk(\"loginUser\", async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"http://127.0.0.1:8000/api/account/token/\", {\n      email: email,\n      password: password\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      return rejectWithValue(\"Incorrect email or password. Please try again.\");\n    } else {\n      return rejectWithValue('Network error. Please try again.');\n    }\n  }\n});\nexport const registerUser = createAsyncThunk(\"registerUser\", async ({\n  name,\n  email,\n  password1\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"http://127.0.0.1:8000/api/account/register/\", {\n      name: name,\n      email: email,\n      password: password1\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 400) {\n      return rejectWithValue(error.response.data.email[0]);\n    } else {\n      return rejectWithValue('Network error. Please try again.');\n    }\n  }\n});\nconst AccountSlice = createSlice({\n  name: 'account',\n  initialState: {\n    user: null,\n    is_loading: false,\n    is_error: null,\n    is_created: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n    },\n    resetIsCreated(state) {\n      state.is_created = null;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(loginUser.pending, state => {\n      state.is_loading = true;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.is_loading = false;\n      state.is_error = null;\n      state.user = action.payload;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.is_loading = false;\n      state.is_error = action.payload;\n    }).addCase(registerUser.pending, state => {\n      state.is_loading = true;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.is_loading = false;\n      state.is_error = null;\n      state.user = null;\n      state.is_created = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.is_loading = false;\n      state.is_error = action.payload;\n    });\n  }\n});\nexport default AccountSlice.reducer;\nexport const {\n  logout,\n  resetIsCreated\n} = AccountSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","loginUser","email","password","rejectWithValue","response","post","data","error","status","registerUser","name","password1","AccountSlice","initialState","user","is_loading","is_error","is_created","reducers","logout","state","resetIsCreated","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","reducer","actions"],"sources":["/home/developer/Desktop/Full_Stack/Shopping_Website/frontend/src/features/AccountSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nexport const loginUser = createAsyncThunk(\"loginUser\", async ({ email, password }, { rejectWithValue }) => {\n    try {\n        const response = await axios.post(\"http://127.0.0.1:8000/api/account/token/\", {\n            email: email,\n            password: password\n        })\n        return response.data\n    } catch (error) {\n        if (error.response && error.response.status === 401) {\n            return rejectWithValue(\"Incorrect email or password. Please try again.\");\n        } else {\n            return rejectWithValue('Network error. Please try again.');\n        }\n    }\n})\nexport const registerUser = createAsyncThunk(\"registerUser\", async ({ name, email, password1 }, { rejectWithValue }) => {\n    try {\n        const response = await axios.post(\"http://127.0.0.1:8000/api/account/register/\", {\n            name: name,\n            email: email,\n            password: password1\n        })\n        return response.data\n    } catch (error) {\n        if (error.response && error.response.status === 400) {\n            return rejectWithValue(error.response.data.email[0]);\n        } else {\n            return rejectWithValue('Network error. Please try again.');\n        }\n    }\n})\n\n\n\n\n\n\nconst AccountSlice = createSlice({\n    name: 'account',\n    initialState: {\n        user: null,\n        is_loading: false,\n        is_error: null,\n        is_created: null\n    },\n    reducers: {\n        logout(state) {\n            state.user = null\n        },\n        resetIsCreated(state) {\n            state.is_created = null\n        }\n    },\n    extraReducers(builder) {\n        builder\n            .addCase(loginUser.pending, (state) => {\n                state.is_loading = true\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                state.is_loading = false\n                state.is_error = null\n                state.user = action.payload\n            })\n            .addCase(loginUser.rejected, (state, action) => {\n                state.is_loading = false\n                state.is_error = action.payload\n            })\n            .addCase(registerUser.pending, (state) => {\n                state.is_loading = true\n            })\n            .addCase(registerUser.fulfilled, (state, action) => {\n                state.is_loading = false\n                state.is_error = null\n                state.user = null\n                state.is_created = action.payload\n            })\n            .addCase(registerUser.rejected, (state, action) => {\n                state.is_loading = false\n                state.is_error = action.payload\n            })\n    },\n})\n\nexport default AccountSlice.reducer\nexport const { logout, resetIsCreated } = AccountSlice.actions"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,WAAW,EAAE,OAAO;EAAEI,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACvG,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,0CAA0C,EAAE;MAC1EJ,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACd,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MACjD,OAAOL,eAAe,CAAC,gDAAgD,CAAC;IAC5E,CAAC,MAAM;MACH,OAAOA,eAAe,CAAC,kCAAkC,CAAC;IAC9D;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAMM,YAAY,GAAGZ,gBAAgB,CAAC,cAAc,EAAE,OAAO;EAAEa,IAAI;EAAET,KAAK;EAAEU;AAAU,CAAC,EAAE;EAAER;AAAgB,CAAC,KAAK;EACpH,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,6CAA6C,EAAE;MAC7EK,IAAI,EAAEA,IAAI;MACVT,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAES;IACd,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MACjD,OAAOL,eAAe,CAACI,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,MAAM;MACH,OAAOE,eAAe,CAAC,kCAAkC,CAAC;IAC9D;EACJ;AACJ,CAAC,CAAC;AAOF,MAAMS,YAAY,GAAGd,WAAW,CAAC;EAC7BY,IAAI,EAAE,SAAS;EACfG,YAAY,EAAE;IACVC,IAAI,EAAE,IAAI;IACVC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,IAAI;IACdC,UAAU,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACNC,MAAMA,CAACC,KAAK,EAAE;MACVA,KAAK,CAACN,IAAI,GAAG,IAAI;IACrB,CAAC;IACDO,cAAcA,CAACD,KAAK,EAAE;MAClBA,KAAK,CAACH,UAAU,GAAG,IAAI;IAC3B;EACJ,CAAC;EACDK,aAAaA,CAACC,OAAO,EAAE;IACnBA,OAAO,CACFC,OAAO,CAACxB,SAAS,CAACyB,OAAO,EAAGL,KAAK,IAAK;MACnCA,KAAK,CAACL,UAAU,GAAG,IAAI;IAC3B,CAAC,CAAC,CACDS,OAAO,CAACxB,SAAS,CAAC0B,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC7CP,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACJ,QAAQ,GAAG,IAAI;MACrBI,KAAK,CAACN,IAAI,GAAGa,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACxB,SAAS,CAAC6B,QAAQ,EAAE,CAACT,KAAK,EAAEO,MAAM,KAAK;MAC5CP,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACJ,QAAQ,GAAGW,MAAM,CAACC,OAAO;IACnC,CAAC,CAAC,CACDJ,OAAO,CAACf,YAAY,CAACgB,OAAO,EAAGL,KAAK,IAAK;MACtCA,KAAK,CAACL,UAAU,GAAG,IAAI;IAC3B,CAAC,CAAC,CACDS,OAAO,CAACf,YAAY,CAACiB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAChDP,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACJ,QAAQ,GAAG,IAAI;MACrBI,KAAK,CAACN,IAAI,GAAG,IAAI;MACjBM,KAAK,CAACH,UAAU,GAAGU,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDJ,OAAO,CAACf,YAAY,CAACoB,QAAQ,EAAE,CAACT,KAAK,EAAEO,MAAM,KAAK;MAC/CP,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACJ,QAAQ,GAAGW,MAAM,CAACC,OAAO;IACnC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAehB,YAAY,CAACkB,OAAO;AACnC,OAAO,MAAM;EAAEX,MAAM;EAAEE;AAAe,CAAC,GAAGT,YAAY,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}