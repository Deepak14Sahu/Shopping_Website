{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { cartProductsAPI, removeCartProductAPI } from \"./apiProvider\";\nimport { toast } from \"react-toastify\";\nexport const getCartProducts = createAsyncThunk(\"getCartProducts\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    return await cartProductsAPI();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const removeCartProduct = createAsyncThunk(\"removeCartProducts\", async ({\n  productId\n}, {\n  rejectWithValue\n}) => {\n  try {\n    return await removeCartProductAPI({\n      productId\n    });\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst CartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cart: [],\n    is_loading: false,\n    is_error: false\n  },\n  extraReducers(builder) {\n    builder.addCase(getCartProducts.pending, state => {\n      state.is_loading = true;\n    }).addCase(getCartProducts.fulfilled, (state, action) => {\n      state.is_loading = false;\n      state.cart = [...action.payload.products];\n    }).addCase(getCartProducts.rejected, (state, action) => {\n      state.is_loading = false;\n      state.is_error = action.payload;\n      toast.error(action.payload);\n    }).addCase(removeCartProduct.pending, state => {\n      state.is_loading = true;\n    }).addCase(removeCartProduct.fulfilled, (state, action) => {\n      state.is_loading = false;\n      state.cart = [...action.payload.products];\n    }).addCase(removeCartProduct.rejected, (state, action) => {\n      state.is_loading = false;\n      state.is_error = action.payload;\n      toast.error(action.payload);\n    });\n  }\n});\nexport default CartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","cartProductsAPI","removeCartProductAPI","toast","getCartProducts","_","rejectWithValue","error","message","removeCartProduct","productId","CartSlice","name","initialState","cart","is_loading","is_error","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","products","rejected","reducer"],"sources":["/home/developer/Desktop/Full_Stack/Shopping_Website/frontend/src/features/CartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { cartProductsAPI, removeCartProductAPI } from \"./apiProvider\";\nimport { toast } from \"react-toastify\";\n\n\n\nexport const getCartProducts = createAsyncThunk(\"getCartProducts\", async (_, { rejectWithValue }) => {\n    try {\n        return await cartProductsAPI()\n    } catch (error) {\n        return rejectWithValue(error.message)\n    }\n})\n\nexport const removeCartProduct = createAsyncThunk(\"removeCartProducts\", async ({ productId }, { rejectWithValue }) => {\n    try {\n        return await removeCartProductAPI({ productId })\n    } catch (error) {\n        return rejectWithValue(error.message)\n    }\n})\n\n\n\nconst CartSlice = createSlice({\n    name: \"cart\",\n    initialState: {\n        cart: [],\n        is_loading: false,\n        is_error: false\n    },\n    extraReducers(builder) {\n        builder\n            .addCase(getCartProducts.pending, (state) => {\n                state.is_loading = true\n            })\n            .addCase(getCartProducts.fulfilled, (state, action) => {\n                state.is_loading = false\n                state.cart = [...action.payload.products]\n            })\n            .addCase(getCartProducts.rejected, (state, action) => {\n                state.is_loading = false\n                state.is_error = action.payload\n                toast.error(action.payload)\n            })\n            .addCase(removeCartProduct.pending, (state) => {\n                state.is_loading = true\n            })\n            .addCase(removeCartProduct.fulfilled, (state, action) => {\n                state.is_loading = false\n                state.cart = [...action.payload.products]\n            })\n            .addCase(removeCartProduct.rejected, (state, action) => {\n                state.is_loading = false\n                state.is_error = action.payload\n                toast.error(action.payload)\n            })\n    }\n})\n\n\nexport default CartSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,eAAe,EAAEC,oBAAoB,QAAQ,eAAe;AACrE,SAASC,KAAK,QAAQ,gBAAgB;AAItC,OAAO,MAAMC,eAAe,GAAGL,gBAAgB,CAAC,iBAAiB,EAAE,OAAOM,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACjG,IAAI;IACA,OAAO,MAAML,eAAe,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZ,OAAOD,eAAe,CAACC,KAAK,CAACC,OAAO,CAAC;EACzC;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,iBAAiB,GAAGV,gBAAgB,CAAC,oBAAoB,EAAE,OAAO;EAAEW;AAAU,CAAC,EAAE;EAAEJ;AAAgB,CAAC,KAAK;EAClH,IAAI;IACA,OAAO,MAAMJ,oBAAoB,CAAC;MAAEQ;IAAU,CAAC,CAAC;EACpD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,OAAOD,eAAe,CAACC,KAAK,CAACC,OAAO,CAAC;EACzC;AACJ,CAAC,CAAC;AAIF,MAAMG,SAAS,GAAGX,WAAW,CAAC;EAC1BY,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE;EACd,CAAC;EACDC,aAAaA,CAACC,OAAO,EAAE;IACnBA,OAAO,CACFC,OAAO,CAACf,eAAe,CAACgB,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACN,UAAU,GAAG,IAAI;IAC3B,CAAC,CAAC,CACDI,OAAO,CAACf,eAAe,CAACkB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACN,UAAU,GAAG,KAAK;MACxBM,KAAK,CAACP,IAAI,GAAG,CAAC,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IAC7C,CAAC,CAAC,CACDN,OAAO,CAACf,eAAe,CAACsB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACN,UAAU,GAAG,KAAK;MACxBM,KAAK,CAACL,QAAQ,GAAGO,MAAM,CAACC,OAAO;MAC/BrB,KAAK,CAACI,KAAK,CAACgB,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACV,iBAAiB,CAACW,OAAO,EAAGC,KAAK,IAAK;MAC3CA,KAAK,CAACN,UAAU,GAAG,IAAI;IAC3B,CAAC,CAAC,CACDI,OAAO,CAACV,iBAAiB,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACN,UAAU,GAAG,KAAK;MACxBM,KAAK,CAACP,IAAI,GAAG,CAAC,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IAC7C,CAAC,CAAC,CACDN,OAAO,CAACV,iBAAiB,CAACiB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACN,UAAU,GAAG,KAAK;MACxBM,KAAK,CAACL,QAAQ,GAAGO,MAAM,CAACC,OAAO;MAC/BrB,KAAK,CAACI,KAAK,CAACgB,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAGF,eAAeb,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}