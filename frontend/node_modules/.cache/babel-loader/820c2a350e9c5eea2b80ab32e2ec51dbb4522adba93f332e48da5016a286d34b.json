{"ast":null,"code":"import { createAsyncThunk, createSlice, isRejectedWithValue } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const loginUser = createAsyncThunk(\"loginUser\", async ({\n  email,\n  password\n}) => {\n  try {\n    const response = await axios.post(\"http://127.0.0.1:8000/api/account/token/\", {\n      email: email,\n      password: password\n    });\n    return response.data;\n  } catch (error) {\n    console.log(is_error);\n    if (!error.response) {\n      // Network error (e.g., no internet connection)\n      console.log(\"Network error:\", error.message);\n      return isRejectedWithValue(\"Network error occurred. Please try again.\");\n    }\n\n    // Request was made but server responded with status other than 2xx\n    if (error.response.status === 401) {\n      console.log(\"Unauthorized - Incorrect email or password\");\n      return isRejectedWithValue(\"Incorrect email or password. Please try again.\");\n    }\n\n    // Other errors\n    console.error(\"An error occurred:\", error);\n    return \"An error occurred. Please try again later.\";\n  }\n});\nconst AccountSlice = createSlice({\n  name: 'account',\n  initialState: {\n    user: null,\n    is_loading: false,\n    is_error: null\n  },\n  extraReducers(builder) {\n    builder.addCase(loginUser.pending, state => {\n      state.is_loading = true;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.is_loading = false;\n      state.user = action.payload;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.is_loading = false;\n      state.is_error = action.payload;\n    });\n  }\n});\nexport default AccountSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","isRejectedWithValue","axios","loginUser","email","password","response","post","data","error","console","log","is_error","message","status","AccountSlice","name","initialState","user","is_loading","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/home/developer/Desktop/Full_Stack/Shopping_Website/frontend/src/features/AccountSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice, isRejectedWithValue } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nexport const loginUser = createAsyncThunk(\"loginUser\", async ({ email, password }) => {\n    try {\n        const response = await axios.post(\"http://127.0.0.1:8000/api/account/token/\", {\n            email: email,\n            password: password\n        })\n\n        return response.data\n    } catch (error) {\n        console.log(is_error)\n        if (!error.response) {\n            // Network error (e.g., no internet connection)\n            console.log(\"Network error:\", error.message)\n            return isRejectedWithValue(\"Network error occurred. Please try again.\")\n        }\n\n        // Request was made but server responded with status other than 2xx\n        if (error.response.status === 401) {\n            console.log(\"Unauthorized - Incorrect email or password\")\n            return isRejectedWithValue(\"Incorrect email or password. Please try again.\")\n        }\n\n        // Other errors\n        console.error(\"An error occurred:\", error)\n        return (\"An error occurred. Please try again later.\")\n    }\n\n\n\n})\n\nconst AccountSlice = createSlice({\n    name: 'account',\n    initialState: {\n        user: null,\n\n        is_loading: false,\n        is_error: null\n    },\n    extraReducers(builder) {\n        builder\n            .addCase(loginUser.pending, (state) => {\n                state.is_loading = true\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                state.is_loading = false\n                state.user = action.payload\n            })\n            .addCase(loginUser.rejected, (state, action) => {\n                state.is_loading = false\n                state.is_error = action.payload\n            })\n    },\n})\n\nexport default AccountSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,EAAEC,mBAAmB,QAAQ,kBAAkB;AACrF,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAGJ,gBAAgB,CAAC,WAAW,EAAE,OAAO;EAAEK,KAAK;EAAEC;AAAS,CAAC,KAAK;EAClF,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,0CAA0C,EAAE;MAC1EH,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACd,CAAC,CAAC;IAEF,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;IACrB,IAAI,CAACH,KAAK,CAACH,QAAQ,EAAE;MACjB;MACAI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAACI,OAAO,CAAC;MAC5C,OAAOZ,mBAAmB,CAAC,2CAA2C,CAAC;IAC3E;;IAEA;IACA,IAAIQ,KAAK,CAACH,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MAC/BJ,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MACzD,OAAOV,mBAAmB,CAAC,gDAAgD,CAAC;IAChF;;IAEA;IACAS,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAQ,4CAA4C;EACxD;AAIJ,CAAC,CAAC;AAEF,MAAMM,YAAY,GAAGf,WAAW,CAAC;EAC7BgB,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,IAAI,EAAE,IAAI;IAEVC,UAAU,EAAE,KAAK;IACjBP,QAAQ,EAAE;EACd,CAAC;EACDQ,aAAaA,CAACC,OAAO,EAAE;IACnBA,OAAO,CACFC,OAAO,CAACnB,SAAS,CAACoB,OAAO,EAAGC,KAAK,IAAK;MACnCA,KAAK,CAACL,UAAU,GAAG,IAAI;IAC3B,CAAC,CAAC,CACDG,OAAO,CAACnB,SAAS,CAACsB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACN,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACnB,SAAS,CAACyB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC5CF,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACZ,QAAQ,GAAGc,MAAM,CAACC,OAAO;IACnC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeZ,YAAY,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}