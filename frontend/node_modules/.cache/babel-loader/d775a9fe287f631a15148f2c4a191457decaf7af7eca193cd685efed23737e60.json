{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { addWishlistProduct, getWishlistProducts, removeWishlistProduct } from \"./apiProvider\";\nimport { toast } from \"react-toastify\";\nconst WishlistSlice = createSlice({\n  name: \"wishlist\",\n  initialState: {\n    wishlist: [],\n    status: 'idle',\n    error: false\n  },\n  extraReducers(builder) {\n    builder.addCase(getWishlistProducts.pending, state => {\n      state.status = 'loading';\n    }).addCase(getWishlistProducts.fulfilled, (state, action) => {\n      state.status = 'success';\n      state.wishlist = [...action.payload.products];\n    }).addCase(getWishlistProducts.rejected, (state, action) => {\n      state.status = 'rejected';\n      state.error = action.payload;\n      toast.error(action.payload);\n    }).addCase(removeWishlistProduct.pending, state => {\n      state.status = 'loading';\n    }).addCase(removeWishlistProduct.fulfilled, (state, action) => {\n      state.status = 'success';\n      state.wishlist = [...action.payload.products];\n    }).addCase(removeWishlistProduct.rejected, (state, action) => {\n      state.status = 'rejected';\n      state.error = action.payload;\n      toast.error(action.payload);\n    }).addCase(addWishlistProduct.pending, state => {\n      state.status = 'loading';\n    }).addCase(addWishlistProduct.fulfilled, (state, action) => {\n      state.status = 'success';\n      state.wishlist = [...action.payload.products];\n    }).addCase(addWishlistProduct.rejected, (state, action) => {\n      state.status = 'rejected';\n      state.error = action.payload;\n      toast.error(action.payload);\n    });\n  }\n});\nexport default WishlistSlice.reducer;","map":{"version":3,"names":["createSlice","addWishlistProduct","getWishlistProducts","removeWishlistProduct","toast","WishlistSlice","name","initialState","wishlist","status","error","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","products","rejected","reducer"],"sources":["/home/developer/Desktop/Full_Stack/Shopping_Website/frontend/src/features/WishlistSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { addWishlistProduct, getWishlistProducts, removeWishlistProduct } from \"./apiProvider\";\nimport { toast } from \"react-toastify\";\n\nconst WishlistSlice = createSlice({\n    name: \"wishlist\",\n    initialState: {\n        wishlist: [],\n        status: 'idle',\n        error: false\n    },\n    extraReducers(builder) {\n        builder\n            .addCase(getWishlistProducts.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(getWishlistProducts.fulfilled, (state, action) => {\n                state.status = 'success'\n                state.wishlist = [...action.payload.products]\n            })\n            .addCase(getWishlistProducts.rejected, (state, action) => {\n                state.status = 'rejected'\n                state.error = action.payload\n                toast.error(action.payload)\n            })\n            .addCase(removeWishlistProduct.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(removeWishlistProduct.fulfilled, (state, action) => {\n                state.status = 'success'\n                state.wishlist = [...action.payload.products]\n            })\n            .addCase(removeWishlistProduct.rejected, (state, action) => {\n                state.status = 'rejected'\n                state.error = action.payload\n                toast.error(action.payload)\n            })\n            .addCase(addWishlistProduct.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(addWishlistProduct.fulfilled, (state, action) => {\n                state.status = 'success'\n                state.wishlist = [...action.payload.products]\n            })\n            .addCase(addWishlistProduct.rejected, (state, action) => {\n                state.status = 'rejected'\n                state.error = action.payload\n                toast.error(action.payload)\n            })\n    }\n})\n\n\nexport default WishlistSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,kBAAkB,EAAEC,mBAAmB,EAAEC,qBAAqB,QAAQ,eAAe;AAC9F,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,aAAaA,CAACC,OAAO,EAAE;IACnBA,OAAO,CACFC,OAAO,CAACX,mBAAmB,CAACY,OAAO,EAAGC,KAAK,IAAK;MAC7CA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACX,mBAAmB,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACN,MAAM,GAAG,SAAS;MACxBM,KAAK,CAACP,QAAQ,GAAG,CAAC,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IACjD,CAAC,CAAC,CACDN,OAAO,CAACX,mBAAmB,CAACkB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACN,MAAM,GAAG,UAAU;MACzBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5Bd,KAAK,CAACM,KAAK,CAACO,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACV,qBAAqB,CAACW,OAAO,EAAGC,KAAK,IAAK;MAC/CA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACV,qBAAqB,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzDF,KAAK,CAACN,MAAM,GAAG,SAAS;MACxBM,KAAK,CAACP,QAAQ,GAAG,CAAC,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IACjD,CAAC,CAAC,CACDN,OAAO,CAACV,qBAAqB,CAACiB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACxDF,KAAK,CAACN,MAAM,GAAG,UAAU;MACzBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5Bd,KAAK,CAACM,KAAK,CAACO,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACZ,kBAAkB,CAACa,OAAO,EAAGC,KAAK,IAAK;MAC5CA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACZ,kBAAkB,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACN,MAAM,GAAG,SAAS;MACxBM,KAAK,CAACP,QAAQ,GAAG,CAAC,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;IACjD,CAAC,CAAC,CACDN,OAAO,CAACZ,kBAAkB,CAACmB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACN,MAAM,GAAG,UAAU;MACzBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5Bd,KAAK,CAACM,KAAK,CAACO,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAGF,eAAeb,aAAa,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}